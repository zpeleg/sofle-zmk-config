/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define NAV_NUM_L 1
#define NAV_NUM_R 2
#define SYMBOLS 3
#define ADJUST  4

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <NAV_NUM_L NAV_NUM_R>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  `     |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
            // | TAB    |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   =   |
            // | ESC    |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT  |  Z  |  X  |  C   |  V   |  B   |   MUTE   |  |     |  N   |  M    |  ,    |  .   |   /   |  ALT  |
            //                | GUI | ALT  | CTRL | NAV_L|  SPACE   |  | ENT | NAV_R| BSPC  | CTRL  | DEL  |

            bindings = <
&kp GRAVE             &kp N1  &kp N2     &kp N3    &kp N4  &kp N5                                   &kp N6               &kp N7  &kp N8       &kp N9   &kp N0    &kp MINUS
&kp TAB               &kp Q   &kp W      &kp E     &kp R   &kp T                                    &kp Y                &kp U   &kp I        &kp O    &kp P     &kp EQUAL
&mt ESC LEFT_CONTROL  &kp A   &kp S      &kp D     &kp F   &kp G                                    &kp H                &kp J   &kp K        &kp L    &kp SEMI  &kp SQT
&kp LSHFT             &kp Z   &kp X      &kp C     &kp V   &kp B   &kp C_MUTE         &none         &kp N                &kp M   &kp COMMA    &kp DOT  &kp FSLH  &kp RALT
                              &kp LCTRL  &kp LALT  &mo 1   &mo 2   &mt SPACE LSHFT    &mt RET LGUI  &mt LCTRL BACKSPACE  &mo 1   &lt 2 ENTER  &kp DEL
            >;
        };

        nav_num_l_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |     |     |     |      |     |     |                   |      |      |      |      |      |      |
            // |     | HOME| UP  | END  | PGUP|     |                   |  /   |  7   |  8   |  9   |  -   |      |
            // |     |LEFT | DOWN| RIGHT| PGDN|     |                   |  *   |  4   |  5   |  6   |  +   |      |
            // |     |MUTE | VOLD| VOLU| PLAY |     |       |     |     |  0   |  1   |  2   |  3   |  .   |      |
            //             |     |     |      |     |       |     |     |      |      |      |      |

            bindings = <
&trans  &kp F1  &kp F2      &kp F3        &kp F4        &kp F5                       &kp F6  &kp F7     &kp F8  &kp F9  &kp F10  &kp F11
&trans  &trans  &kp HOME    &kp UP        &kp END       &kp PG_UP                    &trans  &kp FSLH   &kp N7  &kp N8  &kp N9   &kp F12
&trans  &trans  &kp LEFT    &kp DOWN      &kp RIGHT     &kp PG_DN                    &trans  &kp ASTRK  &kp N4  &kp N5  &kp N6   &kp PLUS
&trans  &trans  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP   &trans    &trans  &kp N0  &kp N1     &kp N2  &kp N3  &kp DOT  &trans
                &trans      &trans        &trans        &trans     &trans    &trans  &trans  &trans     &trans  &trans
            >;
        };

        nav_num_r_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |      |     |     |     |     |     |                  |      |      |      |      |      |      |
            // |      |  /  |  7  |  8  |  9  |  -  |                  |      | PGUP | HOME |  UP  | END  |      |
            // |      |  *  |  4  |  5  |  6  |  +  |                  |      | PGDN | LEFT | DOWN | RIGHT|      |
            // |      |  0  |  1  |  2  |  3  |  .  |        |  |      |      | MUTE | VOLD | VOLU | PLAY |      |
            //              |     |     |     |     |        |  |      |      |      |      |      |

            bindings = <
&trans  &kp F1     &kp F2  &kp F3  &kp F4  &kp F5                       &kp F6  &kp F7      &kp F8        &kp F9        &kp F10    &kp F11
&trans  &kp FSLH   &kp N7  &kp N8  &kp N9  &kp MINUS                    &trans  &kp PG_UP   &kp HOME      &kp UP        &kp END    &kp F12
&trans  &kp ASTRK  &kp N4  &kp N5  &kp N6  &kp PLUS                     &trans  &kp PG_DN   &kp LEFT      &kp DOWN      &kp RIGHT  &trans
&trans  &kp N0     &kp N1  &kp N2  &kp N3  &kp DOT    &trans    &trans  &trans  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP   &trans
                   &trans  &trans  &trans  &trans     &trans    &trans  &trans  &trans      &trans        &trans
            >;
        };

        symbols_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |     |  !  |  @  |  #  |  $  |  %  |                   |  ^  |  &  |  *  |  (   |  )   |      |
            // |     |     |     |     |     |     |                   |  -  |  =  |  [  |  ]   |  \   |  `   |
            // |     |     |     |     |     |     |                   |  _  |  +  |  {  |  }   | "|"  |  ~   |
            // |     |     |     |     |     |     |         |  |      |     |     |  <  |  >   |  ?   |      |
            //             |     |     |     |     |         |  |      |     |     |     |      |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR  &trans
&trans  &trans    &trans  &trans    &trans    &trans                       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT   &kp BSLH  &kp GRAVE
&trans  &trans    &trans  &trans    &trans    &trans                       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC   &kp PIPE  &kp TILDE
&trans  &trans    &trans  &trans    &trans    &trans     &trans    &trans  &trans     &kp LT     &kp GT     &kp QMARK  &trans    &trans
                  &trans  &trans    &trans    &trans     &trans    &trans  &trans     &trans     &trans
            >;
        };

        adjust_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                |      |      |      |      |      |      |
            // | EXTPWR| TOG | EFF |  HUI |  SAI |  BRI |                |      |      |      |      |      |      |
            // |       |     |     |      |      |      |                |      |      |      |      |      |      |
            // |       |     |     |      |      |      |        |       |      |      |      |      |      |      |
            //                     |      |      |      |        |       |      |      |      |      |

            bindings = <
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&ext_power EP_TOG  &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans             &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans             &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                 &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
